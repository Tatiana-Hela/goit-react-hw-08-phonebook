{"version":3,"file":"static/js/334.a7f3e30d.chunk.js","mappings":"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","sources":["components/RegisterForm/initialState.js","../node_modules/@chakra-ui/icons/dist/chunk-BRE73WBG.mjs","../node_modules/@chakra-ui/icons/dist/chunk-WQWU3AO7.mjs","components/RegisterForm/RegisterForm.jsx","components/pages/RegisterPage/RegisterPage.jsx","../node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\nexport default initialState;\n","// src/ViewOff.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ViewOffIcon = createIcon({\n  displayName: \"ViewOffIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.2,10.549a20.954,20.954,0,0,0-4.3-3.6l4-3.995a1,1,0,1,0-1.414-1.414l-.018.018a.737.737,0,0,1-.173.291l-19.5,19.5c-.008.007-.018.009-.026.017a1,1,0,0,0,1.631,1.088l4.146-4.146a11.26,11.26,0,0,0,4.31.939h.3c4.256,0,8.489-2.984,11.051-5.8A2.171,2.171,0,0,0,23.2,10.549ZM16.313,13.27a4.581,4.581,0,0,1-3,3.028,4.3,4.3,0,0,1-3.1-.19.253.253,0,0,1-.068-.407l5.56-5.559a.252.252,0,0,1,.407.067A4.3,4.3,0,0,1,16.313,13.27Z\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M7.615,13.4a.244.244,0,0,0,.061-.24A4.315,4.315,0,0,1,7.5,12,4.5,4.5,0,0,1,12,7.5a4.276,4.276,0,0,1,1.16.173.244.244,0,0,0,.24-.062l1.941-1.942a.254.254,0,0,0-.1-.421A10.413,10.413,0,0,0,12,4.75C7.7,4.692,3.4,7.7.813,10.549a2.15,2.15,0,0,0-.007,2.9,21.209,21.209,0,0,0,3.438,3.03.256.256,0,0,0,.326-.029Z\" })\n  ] })\n});\n\nexport {\n  ViewOffIcon\n};\n","// src/View.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ViewIcon = createIcon({\n  displayName: \"ViewIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"currentColor\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M23.432,10.524C20.787,7.614,16.4,4.538,12,4.6,7.6,4.537,3.213,7.615.568,10.524a2.211,2.211,0,0,0,0,2.948C3.182,16.351,7.507,19.4,11.839,19.4h.308c4.347,0,8.671-3.049,11.288-5.929A2.21,2.21,0,0,0,23.432,10.524ZM7.4,12A4.6,4.6,0,1,1,12,16.6,4.6,4.6,0,0,1,7.4,12Z\" }),\n    /* @__PURE__ */ jsx(\"circle\", { cx: \"12\", cy: \"12\", r: \"2\" })\n  ] })\n});\n\nexport {\n  ViewIcon\n};\n","import { useState, useCallback } from 'react';\nimport initialState from './initialState';\n\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputRightElement,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(onSubmit);\n    onSubmit({ ...state });\n    console.log(onSubmit);\n    setState({ ...initialState });\n  };\n\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl\n        boxSize=\"400\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        isRequired\n      >\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <Input\n          focusBorderColor=\"green.300\"\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n          value={name}\n          name=\"name\"\n        />\n        <FormLabel mt=\"4\" htmlFor=\"email\">\n          Email\n        </FormLabel>\n        <Input\n          focusBorderColor=\"green.300\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n          value={email}\n          name=\"email\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n        />\n        <FormLabel mt=\"4\" htmlFor=\"password\">\n          Password\n        </FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            focusBorderColor=\"green.300\"\n            id=\"password\"\n            pr=\"4.5rem\"\n            type={show ? 'text' : 'password'}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n            value={password}\n            name=\"password\"\n            title=\"Password must be at least 7 characters long, include letters and numbers\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n\n        <Button type=\"submit\" mr=\"auto\" ml=\"auto\" mt=\"10\" colorScheme=\"green\">\n          Register\n        </Button>\n      </FormControl>\n    </form>\n  );\n};\nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\nimport { Box, Text } from '@chakra-ui/react';\nimport { registration } from 'redux/auth/auth-operation';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(registration(data));\n  };\n\n  return (\n    <Box mt=\"60px\" display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n      <Text\n        width=\"400px\"\n        border=\"2px solid green\"\n        borderRadius=\"6px\"\n        textAlign=\"center\"\n        fontSize=\"22\"\n        mb=\"5\"\n        fontWeight=\"500\"\n      >\n        Registration Form\n      </Text>\n      <RegisterForm onSubmit={handleSignup} />\n    </Box>\n  );\n};\nexport default RegisterPage;\n","import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n"],"names":["name","email","password","ViewOffIcon","createIcon","displayName","path","jsxs","fill","children","jsx","d","ViewIcon","cx","cy","r","_ref","onSubmit","_useState","useState","_objectSpread","initialState","_useState2","_slicedToArray","state","setState","_useState3","_useState4","show","setShow","handleChange","useCallback","_ref2","target","value","prevState","_defineProperty","_jsx","e","preventDefault","console","log","_jsxs","FormControl","boxSize","display","flexDirection","isRequired","FormLabel","htmlFor","Input","focusBorderColor","id","type","placeholder","onChange","mt","pattern","InputGroup","size","pr","title","InputRightElement","width","Button","h","onClick","mr","ml","colorScheme","dispatch","useDispatch","Box","alignItems","Text","border","borderRadius","textAlign","fontSize","mb","fontWeight","RegisterForm","data","registration","options","_options$viewBox","viewBox","pathDefinition","_options$defaultProps","defaultProps","Children","Comp","forwardRef","props","ref","Icon","length"],"sourceRoot":""}