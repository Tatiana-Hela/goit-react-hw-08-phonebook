{"version":3,"file":"static/js/756.a1d133c4.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selector.js","webpack://react-homework-template/./src/components/pages/ContactsPage/ContactsPage.module.css?c85d","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/filter-selector.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__idZzt\",\"text\":\"ContactsPage_text__H967y\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nimport css from '../ContactForm/ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error(\"There isn't such option\");\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Enter name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Enter number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contacts\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { getContacts } from 'redux/contacts/contacts-selector';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, getContacts],\n  (filter, contacts) => {\n    const normalizeFilter = filter.trim().toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactItem_button__IRFBz\",\"item\":\"ContactItem_item__gxreB\",\"info\":\"ContactItem_info__fyb5q\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport css from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.item} key={id}>\n      <p className={css.info}>\n        {name}: {number}\n      </p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/filter/filter-selector';\n\nimport css from '../ContactList/ContactList.module.css';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {contacts.length === 0 && (\n        <p className={css.text}>There is no such contact</p>\n      )}\n      <ul className={css.list}>\n        {contacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selector';\n\nimport css from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        placeholder=\"Enter name...\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport css from '../Section/Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport { useEffect } from 'react';\nimport css from '../ContactsPage/ContactsPage.module.css';\n\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // console.log(contacts);\n  const isContacts = Boolean(contacts.length);\n  return (\n    <div className={css.container}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isContacts && <Filter />}\n        {isContacts && <ContactList />}\n\n        {!isContacts && (\n          <p className={css.text}>\n            Your phonebook is empty. Please add contact.\n          </p>\n        )}\n      </Section>\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["getContacts","state","contacts","items","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleChange","e","_e$target","target","value","Error","_jsxs","onSubmit","preventDefault","addContact","className","css","children","_jsx","type","placeholder","pattern","title","onChange","required","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","map","join","getDependencies","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","selectFilter","filter","selectVisibleContacts","normalizeFilter","trim","toLowerCase","contact","includes","_ref","id","onClick","deleteContact","useSelector","_Fragment","ContactItem","setFilter","useEffect","fetchContacts","isContacts","Boolean","Section","ContactForm","Filter","ContactList"],"sourceRoot":""}